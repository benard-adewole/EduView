<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             xmlns:VM="clr-namespace:Estudiar.ViewModels"
             xmlns:MaterialFont="clr-namespace:MaterialDesign"
             xmlns:converters="clr-namespace:Estudiar.Converters"
             xmlns:shimmer="clr-namespace:Syncfusion.XForms.Shimmer;assembly=Syncfusion.Core.XForms"
             xmlns:sfEffetView="clr-namespace:Syncfusion.XForms.EffectsView;assembly=Syncfusion.Core.XForms"
             xmlns:tabView="clr-namespace:Syncfusion.XForms.TabView;assembly=Syncfusion.SfTabView.XForms"
             xmlns:cards="clr-namespace:Syncfusion.XForms.Cards;assembly=Syncfusion.Cards.XForms"
             xmlns:inputLayout="clr-namespace:Syncfusion.XForms.TextInputLayout;assembly=Syncfusion.Core.XForms"
             xmlns:carousel="clr-namespace:Syncfusion.SfCarousel.XForms;assembly=Syncfusion.SfCarousel.XForms"
             xmlns:ff="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
             xmlns:sfBtn="clr-namespace:Syncfusion.XForms.Buttons;assembly=Syncfusion.Buttons.XForms"
             xmlns:controls="clr-namespace:Estudiar.Controls"
             xmlns:ffTrans="clr-namespace:FFImageLoading.Transformations;assembly=FFImageLoading.Transformations"
             xmlns:views="clr-namespace:Xamarin.CommunityToolkit.UI.Views;assembly=Xamarin.CommunityToolkit"
             xmlns:CustomView="clr-namespace:Estudiar.CustomViews"
             x:Name="this"
             BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark}, Light= {StaticResource BackgroundColor},Default={StaticResource BackgroundColor}}"
             x:Class="Estudiar.Views.CustomTab">
    <ContentPage.BindingContext>
        <VM:CustomTabVM/>
    </ContentPage.BindingContext>
    <ContentPage.Resources>
        <converters:TextToInitialCapsConverter x:Key="TextToInitialCaps"/>
        <converters:TextToSentenceConverter x:Key="TextToSentenceConverter"/>
        <xct:InvertedBoolConverter x:Key="InvertedBoolConverter"/>

        <ControlTemplate x:Key="EditAdaptEntry">
            <StackLayout Margin="20,0" WidthRequest="400" Spacing="0" BindingContext="{Binding Source={RelativeSource TemplatedParent}}" HorizontalOptions="FillAndExpand" >
                <Label Text="{Binding Header}" Style="{StaticResource EntryHeader}" IsVisible="{Binding IsEditable}" />
                <inputLayout:SfTextInputLayout EnablePasswordVisibilityToggle="{Binding IsPassword}" LeadingViewPosition="Inside">
                    <inputLayout:SfTextInputLayout.Triggers>
                        <DataTrigger TargetType="inputLayout:SfTextInputLayout" Binding="{Binding IsEditable}" Value="False">
                            <Setter Property="LeadingViewPosition" Value="Inside"/>
                            <Setter Property="LeadingView">
                                <Setter.Value>
                                    <Grid WidthRequest="100" RowSpacing="0" ColumnDefinitions="Auto,Auto">
                                        <Label Grid.Column="0" Text="{Binding Icon}" FontFamily="MF" FontSize="25" Margin="5,0,0,0" TextColor="{AppThemeBinding Dark=White, Light= Black,Default=Black}"/>
                                        <Label Grid.Column="1" Text="{Binding Header}" LineBreakMode="TailTruncation" MaxLines="1"
                                               VerticalOptions="Center" FontFamily="NSK" TextColor="{AppThemeBinding Dark=White, Light= Black,Default=Black}" />
                                    </Grid>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </inputLayout:SfTextInputLayout.Triggers>

                    <Entry Text="{Binding Value}" HorizontalOptions="FillAndExpand" 
                           IsPassword="{Binding IsPassword}" IsReadOnly="{Binding IsEditable, Converter={StaticResource InvertedBoolConverter}}">
                        <Entry.Triggers>
                            <DataTrigger TargetType="Entry" Binding="{Binding IsEditable}" Value="False" >
                                <Setter Property="HorizontalTextAlignment" Value="End"/>
                                <Setter Property="TextColor" Value="{AppThemeBinding Dark=lightgray, Light=#9CA0B0,Default=#9CA0B0}"/>
                            </DataTrigger>
                        </Entry.Triggers>
                    </Entry>
                </inputLayout:SfTextInputLayout>
            </StackLayout>
        </ControlTemplate>
        <converters:stringToStreamConverter x:Key="stringToStreamConverter"/>
        <ResourceDictionary>
            <ControlTemplate
		        x:Key="TabItemTemplate" >
                
                <Grid RowSpacing="0" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Image
				        Grid.Row="0"
				        VerticalOptions="Center"
				        HorizontalOptions="Center"
				        WidthRequest="24"
				        HeightRequest="24"
                        Margin="6"
				        Source="{TemplateBinding CurrentIcon}" />
                    <Label
				        Grid.Row="1"
                        IsVisible="false"
				        HorizontalOptions="Center"
				        FontSize="{TemplateBinding FontSize}"
				        Text="{TemplateBinding Text}"
				        TextColor="{TemplateBinding CurrentTextColor}" />
                </Grid>
            </ControlTemplate>
            <ControlTemplate
                x:Key="FabTabItemTemplate">
                <Grid>
                    <ImageButton
                        InputTransparent="True"
                        Source="{TemplateBinding CurrentIcon}"
                        Padding="10"
                        HorizontalOptions="Center"
                        BackgroundColor="White"
                        BorderColor="LightGray"
                        BorderWidth="2"
                        HeightRequest="60"
                        WidthRequest="60"
                        Margin="0,0,0,0">
                        <ImageButton.CornerRadius>
                            <OnPlatform x:TypeArguments="x:Int32">
                                <On Platform="iOS" Value="30"/>
                                <On Platform="Android" Value="60"/>
                                <On Platform="UWP" Value="36"/>
                            </OnPlatform>
                        </ImageButton.CornerRadius>
                        <ImageButton.IsVisible>
                            <OnPlatform x:TypeArguments="x:Boolean">
                                <On Platform="Android, iOS, UWP">True</On>
                                <On Platform="macOS">False</On>
                            </OnPlatform>
                        </ImageButton.IsVisible>
                    </ImageButton>
                    <BoxView  
                        InputTransparent="True"
                        HorizontalOptions="Center"
                        CornerRadius="30"
                        BackgroundColor="#FF0000"
                        HeightRequest="60"
                        WidthRequest="60"
                        Margin="6">
                        <BoxView.IsVisible>
                            <OnPlatform x:TypeArguments="x:Boolean">
                                <On Platform="Android, iOS, UWP">False</On>
                                <On Platform="macOS">True</On>
                            </OnPlatform>
                        </BoxView.IsVisible>
                    </BoxView>
                </Grid>
            </ControlTemplate>
            <Style
		        x:Key="CustomTabStyle"
		        TargetType="xct:TabView">
                <Setter
			        Property="IsTabTransitionEnabled"
			        Value="True" />
                <Setter
			        Property="TabStripHeight"
			        Value="48" />
                <Setter
			        Property="TabContentBackgroundColor"
			        Value="#C2C3C3" />
                <Setter
			        Property="TabStripPlacement"
			        Value="Bottom" />
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>

        <Grid>
            <xct:TabView x:Name="mainTab"
                IsTabTransitionEnabled="False"
                         SelectionChanged="mainTab_SelectionChanged"
                IsSwipeEnabled="False"
                TabStripPlacement="Bottom"
                BackgroundColor="Transparent"
                TabIndicatorHeight="5"
                TabContentHeight="70"
                TabContentBackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark}, Light= {StaticResource BackgroundColor},Default={StaticResource BackgroundColor}}">
                
                <xct:TabView.TabStripBackgroundView>
                    <Grid>
                        <BoxView BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColor}, Light= {StaticResource BackgroundColorDark},Default={StaticResource BackgroundColorDark}}" Opacity="0.5" Margin="0,-2,0,0" WidthRequest="30" CornerRadius="20,20,0,0"/>

                        <BoxView BackgroundColor="{AppThemeBinding Dark={StaticResource BackgroundColorDark}, Light= {StaticResource BackgroundColor},Default={StaticResource BackgroundColor}}" WidthRequest="30" CornerRadius="20,20,0,0"/>
                    </Grid>
                </xct:TabView.TabStripBackgroundView>
                <xct:TabView.TabIndicatorView>
                    <Image>
                        <Image.Source>
                            <FontImageSource Glyph="{x:Static MaterialFont:FontIcon.CheckboxBlankCircle}" FontFamily="MF" Color="{StaticResource AppColor}" Size="30"/>
                        </Image.Source>
                    </Image>
                </xct:TabView.TabIndicatorView>

                <xct:TabViewItem TabIndex="0"
                    Text="Tab 1"
                    TextColor="Black"
                    TextColorSelected="Red"
                    ControlTemplate="{StaticResource TabItemTemplate}"
                    FontSize="12">
                    <xct:TabViewItem.Icon>
                        <FontImageSource Glyph="{x:Static MaterialFont:FontIcon.HomeVariantOutline}" FontFamily="MF" Color="Gray"/>
                    </xct:TabViewItem.Icon>
                    <xct:TabViewItem.IconSelected>
                        <FontImageSource Glyph="{x:Static MaterialFont:FontIcon.HomeVariant}" FontFamily="MF" Color="{StaticResource AppColor}"/>
                    </xct:TabViewItem.IconSelected>
                    <ScrollView VerticalScrollBarVisibility="Never">
                        <StackLayout Padding="0,30,0,0">

                            <StackLayout Orientation="Horizontal">

                                <Label FontFamily="NSK" VerticalOptions="Center" FontSize="30" Margin="20,0,0,0" LineBreakMode="TailTruncation" MaxLines="1" TextColor="{AppThemeBinding Dark=White, Light= Black,Default=Black}">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="Hi, "/>
                                            <Span Text="{Binding LoginResponse.user.name,Converter={StaticResource TextToSentenceConverter}}" />
                                            <Span Text=" 👋" TextColor="Black"/>
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>
                                <ImageButton x:Name="AccountBox" BackgroundColor="Transparent" Clicked="AccountBox_Clicked" HorizontalOptions="EndAndExpand" VerticalOptions="Center" Margin="0,0,20,0" >
                                    <ImageButton.Source>
                                        <FontImageSource Glyph="{x:Static MaterialFont:FontIcon.AccountBox}" Size="40" FontFamily="MF" Color="{AppThemeBinding Dark=White, Light= Black,Default=Black}"/>
                                    </ImageButton.Source>
                                </ImageButton>
                            </StackLayout>

                            <BoxView HeightRequest="1" HorizontalOptions="Fill" BackgroundColor="{AppThemeBinding Dark={StaticResource DimGray}, Light=#F5F5F9,Default=#F5F5F9}"  Margin="20,0"/>
                            <Frame BackgroundColor="{AppThemeBinding Dark={StaticResource DimGray}, Light=#F5F5F9,Default=#F5F5F9}"
                                   HasShadow="False"
                                   Margin="20,7"
                                   Padding="0">
                                <sfBtn:SfButton x:Name="FindCourseBtn" Text="Find course(s) by title or code" IsCheckable="False"
                                                PressedBackgroundColor="{AppThemeBinding Dark={StaticResource DimGray}, Light=#F5F5F9,Default=#F5F5F9}"
                                                BackgroundColor="{AppThemeBinding Dark={StaticResource DimGray}, Light=#F5F5F9,Default=#F5F5F9}"
                                                Clicked="FindCourseBtn_Clicked"
                                        ShowIcon="True"
                                        FontFamily="IB"
                                        FontSize="15"
                                                Padding="5,15,15,15"
                                        HorizontalOptions="FillAndExpand"
                                            HorizontalTextAlignment="Start"
                                            CornerRadius="5" ImageAlignment="Left"
                                        TextColor="{AppThemeBinding Dark=lightgray, Light=#9CA0B0,Default=#9CA0B0}">
                                    <sfBtn:SfButton.ImageSource>
                                        <FontImageSource Glyph="{x:Static MaterialFont:FontIcon.Magnify}" Color="{AppThemeBinding Dark=lightgray, Light=#9CA0B0,Default=#9CA0B0}" FontFamily="MF" Size="40"/>
                                    </sfBtn:SfButton.ImageSource>
                                    <!--<VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal">
                                                <VisualState.Setters>
                                                    <Setter Property="Text" Value="Enabled" />
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <VisualState.Setters>
                                                    <Setter Property="Text" Value="Disabled" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="ButtonStates">
                                            <VisualState x:Name="Pressed">
                                                <VisualState.Setters>
                                                    <Setter Property="Text" Value="Clicked" />
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="Checked">
                                                <VisualState.Setters>
                                                    <Setter Property="Text" Value="Checked" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>-->
                                </sfBtn:SfButton>
                            </Frame>
                            <!--<inputLayout:SfTextInputLayout  HorizontalOptions="FillAndExpand" LeadingViewPosition="Inside" Margin="20,0" >
                                <inputLayout:SfTextInputLayout.LeadingView>
                                    <Image>
                                        <Image.Source>
                                            <FontImageSource Glyph="{x:Static MaterialFont:FontIcon.Magnify}" Size="40" FontFamily="MF" Color="{AppThemeBinding Dark=lightgray, Light=#9CA0B0,Default=#9CA0B0}"/>
                                        </Image.Source>
                                    </Image>
                                </inputLayout:SfTextInputLayout.LeadingView>

                                <Entry x:Name="homeSearch" Focused="searchEntry_Focused" 
                                    Placeholder="Find course(s) by title or code">

                                </Entry>
                            </inputLayout:SfTextInputLayout>-->
                            <Label Text="Newest Resources" FontFamily="NSK" FontSize="20" Margin="20,10,20,0" TextColor="{AppThemeBinding Dark=White, Light= Black,Default=Black}"/>
                            <Grid xct:StateLayout.CurrentState="{Binding NewestCoursestate}">
                                <xct:StateLayout.StateViews>
                                    <views:StateView StateKey="Loading"
                                                        RepeatCount="1"
                                                        Template="{StaticResource NewestCourse_Shimmer}"/>
                                    <views:StateView StateKey="Error">
                                        <StackLayout Grid.Row="1" VerticalOptions="Fill" HorizontalOptions="Fill">
                                            <Button Text="Refresh this Page" HorizontalOptions="Center"
                                                    Margin="0,60"
                                                    Command="{Binding RefreshCourses}"
                                                    BackgroundColor="{StaticResource AppColor}"
                                                    TextColor="White"
                                                    FontSize="20"
                                                    VerticalOptions="Center"/>
                                        </StackLayout>
                                    </views:StateView>
                                    <views:StateView StateKey="Empty">
                                        <StackLayout Grid.Row="1" VerticalOptions="Fill" Padding="40,40" HorizontalOptions="Fill">
                                            <Label Text="No new resource at the moment. Contribute to EduView community today"/>
                                        </StackLayout>
                                    </views:StateView>
                                    
                                </xct:StateLayout.StateViews>
                                <carousel:SfCarousel x:Name="carousel"
                                             HorizontalOptions="Fill"
                                             HeightRequest="150"
                                                 ItemWidth="230"
                             ItemsSource="{Binding NewResources}" 
                                             ItemHeight="150">

                                    <carousel:SfCarousel.ItemTemplate>
                                        <DataTemplate>
                                            <cards:SfCardView xct:TouchEffect.Command="{Binding BindingContext.SelectedMaterial,Source={x:Reference this}}"
                                                          xct:TouchEffect.CommandParameter="{Binding .}" >
                                                <Grid >
                                                    <ff:CachedImage Source="{Binding dp}"
                                                                    LoadingPlaceholder = "Logo"
                                                                Aspect="AspectFill"
                                                                    ErrorPlaceholder = "Error"
                                                                    HorizontalOptions="Fill"
                                                                VerticalOptions="Fill"
                                                                    HeightRequest = "150"
                                                                    CacheDuration = "30"
                                                                    RetryCount = "5"
                                                                    RetryDelay = "450"
                                                                    Grid.Row="0">

                                                    </ff:CachedImage>
                                                    <BoxView BackgroundColor="Black" Opacity="0.4"/>
                                                    <StackLayout VerticalOptions="Center">
                                                        <Label Text="{Binding course}" Margin="10,0" TextTransform="Uppercase" TextColor="White"/>
                                                        <Label Text="{Binding type}" TextTransform="Uppercase" Margin="10,0" TextColor="White"/>
                                                        <Label Text="{Binding foldername}"
                                                           FontFamily="NSK" LineBreakMode="TailTruncation" TextColor="White" MaxLines="3" Margin="10,0"/>
                                                    </StackLayout>

                                                </Grid>
                                            </cards:SfCardView>
                                        </DataTemplate>
                                    </carousel:SfCarousel.ItemTemplate>
                                </carousel:SfCarousel>

                            </Grid>
                            
                            
                            <Label Text="Recommended Courses" FontFamily="NSK" FontSize="20" Margin="20,20,20,0" TextColor="{AppThemeBinding Dark=White, Light= Black,Default=Black}"/>
                            <ScrollView Orientation="Horizontal" HorizontalScrollBarVisibility="Never">
                                <Grid xct:StateLayout.CurrentState="{Binding RecommendedCourse}">
                                    <xct:StateLayout.StateViews>
                                        <views:StateView StateKey="Loading"
                                                        RepeatCount="1"
                                                        Template="{StaticResource RecommendedCourse_Shimmer}"/>
                                        <views:StateView StateKey="Empty">
                                            <StackLayout Grid.Row="1" VerticalOptions="Fill" Padding="40,0" HorizontalOptions="Fill">
                                                <Label Text="No recommended resource available at the moment. Contribute to EduView community today"/>
                                            </StackLayout>
                                        </views:StateView>
                                        <views:StateView StateKey="Error">
                                            <StackLayout Grid.Row="1" VerticalOptions="Fill" HorizontalOptions="Fill">
                                                <Button Text="Refresh this Page" HorizontalOptions="Center"
                                                    Margin="0,60"
                                                    Command="{Binding RefreshCourses}"
                                                    BackgroundColor="{StaticResource AppColor}"
                                                    TextColor="White"
                                                    FontSize="20"
                                                    VerticalOptions="Center"/>
                                            </StackLayout>
                                        </views:StateView>
                                    </xct:StateLayout.StateViews>
                                    <StackLayout 
                                             BindableLayout.ItemsSource="{Binding RecommendedCourse}" Orientation="Horizontal" Margin="20,0,0,0" Spacing="20" >
                                        
                                        <BindableLayout.ItemTemplate>
                                            <DataTemplate>
                                                <cards:SfCardView CornerRadius="10" Margin="0,10,0,0" Padding="0,0,0,10" xct:TouchEffect.PressedOpacity="0.7"
                                                              
                                                              WidthRequest="200"
                                                          xct:TouchEffect.Command="{Binding BindingContext.SelectedCourse,Source={x:Reference this}}"
                                                          xct:TouchEffect.CommandParameter="{Binding .}">
                                                    <StackLayout Spacing="0">
                                                        <ff:CachedImage Source="{Binding dp}"
                                                                    Aspect="AspectFill"
                                                                    LoadingPlaceholder = "Logo"
                                                                    ErrorPlaceholder = "Error"
                                                                    WidthRequest = "150"
                                                                    HeightRequest = "150"
                                                                    CacheDuration = "30"
                                                                    RetryCount = "5"
                                                                    RetryDelay = "450">

                                                        </ff:CachedImage>
                                                        <Label Text="{Binding course}" Margin="10,10,10,0" TextColor="{StaticResource AppColor}" TextTransform="Uppercase"/>
                                                        <Label Text="{Binding title}" FontFamily="NSK" TextColor="{AppThemeBinding Dark=White, Light= Black,Default=Black}"
                                                           LineBreakMode="TailTruncation" MaxLines="2"  Margin="10,0"/>
                                                    </StackLayout>
                                                </cards:SfCardView>
                                            </DataTemplate>
                                        </BindableLayout.ItemTemplate>
                                    </StackLayout>
                                </Grid>
                            </ScrollView>
                            <Label Text="Other Features" FontFamily="NSK" FontSize="20" Margin="20,20,20,0" TextColor="{AppThemeBinding Dark=White, Light= Black,Default=Black}"/>
                            <cards:SfCardView Padding="0,15" Margin="20,5,20,0" xct:TouchEffect.NativeAnimation="True"
                                                          xct:TouchEffect.Command="{Binding BindingContext.OpenCGPAdashboard,Source={x:Reference this}}"
                                                          xct:TouchEffect.NativeAnimationColor="LightGray">
                                <Grid ColumnDefinitions="Auto,Auto" ColumnSpacing="10">
                                    <Image Grid.Column="0" VerticalOptions="Center" Margin="20,0,0,0" >
                                        <Image.Source>
                                            <FontImageSource Glyph="{x:Static MaterialFont:FontIcon.ChartBellCurveCumulative}" Size="30" FontFamily="MF" Color="{AppThemeBinding Dark=White, Light= Black,Default=Black}"/>
                                        </Image.Source>
                                    </Image>
                                    <Label Text="CGPA CALCULATOR" FontFamily="IM" Grid.Column="1" Margin="0,0" 
                                           xct:ShadowEffect.Color="{StaticResource AppColor}"
                                           xct:ShadowEffect.OffsetX="2"
                                           xct:ShadowEffect.OffsetY="2"
                                           xct:ShadowEffect.Opacity="1"
                                           xct:ShadowEffect.Radius="10"
                                           FontSize="20"
                                           
                                           TextColor="{AppThemeBinding Dark=White, Light= Black,Default=Black}" VerticalOptions="Center"/>
                                </Grid>
                            </cards:SfCardView>
                            
                        </StackLayout>
                    </ScrollView>
                </xct:TabViewItem>
                <xct:TabViewItem TabIndex="1"
                    Text="Search"
                    TextColor="Black"
                    TextColorSelected="Red"
                    ControlTemplate="{StaticResource TabItemTemplate}"
                    FontSize="12">
                    <xct:TabViewItem.Icon>
                        <FontImageSource Glyph="{x:Static MaterialFont:FontIcon.Magnify}" FontFamily="MF" Color="Gray"/>
                    </xct:TabViewItem.Icon>
                    <xct:TabViewItem.IconSelected>
                        <FontImageSource Glyph="{x:Static MaterialFont:FontIcon.Magnify}" FontFamily="MF" Color="{StaticResource AppColor}"/>
                    </xct:TabViewItem.IconSelected>

                    <Grid xct:StateLayout.CurrentState="{Binding State}"
                          Padding="0,10"
                          RowDefinitions="Auto, *">
                        <xct:StateLayout.StateViews>
                            <views:StateView StateKey="Loading"
                                                        RepeatCount="10"
                                                        Template="{StaticResource SearchCourse_Shimmer}"/>
                            <views:StateView StateKey="Empty">
                                <Grid Padding="40,40">
                                    <Label Text="No resource available at the moment. Contribute to EduView community today" />
                                </Grid>
                            </views:StateView>
                            <views:StateView StateKey="Error">
                                <StackLayout Grid.Row="1" VerticalOptions="Fill" HorizontalOptions="Fill">
                                    <Button Text="Refresh this Page" HorizontalOptions="Center"
                                                    Margin="0,60"
                                                    Command="{Binding RefreshCourses}"
                                                    BackgroundColor="{StaticResource AppColor}"
                                                    TextColor="White"
                                                    FontSize="20"
                                                    VerticalOptions="Center"/>
                                </StackLayout>
                            </views:StateView>
                        </xct:StateLayout.StateViews>
                        
                        <StackLayout Orientation="Horizontal" Margin="20,0">
                                <inputLayout:SfTextInputLayout  HorizontalOptions="FillAndExpand" LeadingViewPosition="Inside" >
                                    <inputLayout:SfTextInputLayout.LeadingView>
                                        <Image>
                                            <Image.Source>
                                                <FontImageSource Glyph="{x:Static MaterialFont:FontIcon.Magnify}" Size="40" FontFamily="MF" Color="{AppThemeBinding Dark=lightgray, Light=#9CA0B0,Default=#9CA0B0}"/>
                                            </Image.Source>
                                        </Image>
                                    </inputLayout:SfTextInputLayout.LeadingView>
                                
                                <Entry x:Name="searchPageSearchEntry" 
                                       Text="{Binding SearchKey, Mode=OneWayToSource, TargetNullValue='', FallbackValue=''}"
                                    Placeholder="Find course(s) by title or code">
                                    
                                    </Entry>
                                </inputLayout:SfTextInputLayout>
                                
                            </StackLayout>
                        
                        <CollectionView ItemsSource="{Binding Tempcours}" Grid.Row="1">
                            
                            <CollectionView.ItemTemplate>
                                <DataTemplate>
                                    <Grid Padding="20,3" >
                                        <cards:SfCardView Padding="0" xct:TouchEffect.NativeAnimation="True"
                                                          xct:TouchEffect.Command="{Binding BindingContext.SelectedCourse,Source={x:Reference this}}"
                                                          xct:TouchEffect.CommandParameter="{Binding .}"
                                                          xct:TouchEffect.NativeAnimationColor="LightGray">
                                            <Grid ColumnDefinitions="*,2*" ColumnSpacing="0" >
                                                <ff:CachedImage Source="{Binding dp}"
                                                                Grid.Column="0"
                                                                    Aspect="AspectFill"
                                                                HeightRequest="120"
                                                                    LoadingPlaceholder = "Logo"
                                                                xct:CornerRadiusEffect.CornerRadius="15"
                                                                    ErrorPlaceholder = "Error"
                                                                    CacheDuration = "30"
                                                                    RetryCount = "5"
                                                                    RetryDelay = "450">
                                                    
                                                </ff:CachedImage>
                                                <StackLayout Grid.Column="1" Padding="7,7">
                                                    <Label Text="{Binding course}" TextTransform="Uppercase" TextColor="{StaticResource AppColor}" FontFamily="IM"/>
                                                    <Label Text="{Binding title}" LineBreakMode="TailTruncation" MaxLines="2"
                                       FontFamily="NSK" TextColor="{AppThemeBinding Dark=White, Light= Black,Default=Black}" />
                                                    <Label Text="{Binding description}" VerticalOptions="EndAndExpand"  LineBreakMode="TailTruncation" MaxLines="3" FontFamily="IR"/>
                                                </StackLayout>
                                                

                                            </Grid>
                                        </cards:SfCardView>
                                    </Grid>
                                </DataTemplate>

                            </CollectionView.ItemTemplate>
                            <CollectionView.ItemsLayout>
                                <LinearItemsLayout ItemSpacing="0" Orientation="Vertical"/>
                            </CollectionView.ItemsLayout>
                        </CollectionView>
                    </Grid>
                </xct:TabViewItem>

                <!--<xct:TabViewItem TabIndex="2"
                    Text="Account"
                    TextColor="Black"
                    TextColorSelected="Red"
                    ControlTemplate="{StaticResource TabItemTemplate}"
                    FontSize="12">
                    <xct:TabViewItem.Icon>
                        <FontImageSource Glyph="{x:Static MaterialFont:FontIcon.BookmarkOutline}" FontFamily="MF" Color="Gray"/>
                    </xct:TabViewItem.Icon>
                    <xct:TabViewItem.IconSelected>
                        <FontImageSource Glyph="{x:Static MaterialFont:FontIcon.Bookmark}" FontFamily="MF" Color="{StaticResource AppColor}"/>
                    </xct:TabViewItem.IconSelected>
                    <ScrollView>
                        <StackLayout>
                            <Label />
                        </StackLayout>
                    </ScrollView>
                </xct:TabViewItem>-->
                <xct:TabViewItem TabIndex="2"
                    Text="Tab 2"
                    TextColor="Black"
                    TextColorSelected="Red"
                    ControlTemplate="{StaticResource TabItemTemplate}"
                    FontSize="12">
                    <xct:TabViewItem.Icon>
                        <FontImageSource Glyph="{x:Static MaterialFont:FontIcon.AccountCircleOutline}" FontFamily="MF" Color="Gray"/>
                    </xct:TabViewItem.Icon>
                    <xct:TabViewItem.IconSelected>
                        <FontImageSource Glyph="{x:Static MaterialFont:FontIcon.AccountCircle}" FontFamily="MF" Color="{StaticResource AppColor}"/>
                    </xct:TabViewItem.IconSelected>
                    <Grid 
                          Padding="0,10"
                          RowDefinitions="Auto, *">
                        <Grid Grid.Row="0" ColumnDefinitions="50,*,50" Margin="20,0" >
                            <Label Text="Your Account" Grid.Column="1" 
                                   TextColor="{AppThemeBinding Dark=White, Light= Black,Default=Black}"
                               FontSize="30"
                                   VerticalOptions="Center"
                                   HorizontalTextAlignment="Center"
                               HorizontalOptions="Center"
                               FontFamily="NSK"/>
                            <sfBtn:SfButton x:Name="EditToggleBtn"
                                            BackgroundColor="Transparent"
                                            Clicked="EditToggleBtn_Clicked"
                                        Grid.Column="2"
                                        IsCheckable="True"
                                        IsChecked="{Binding IsProfileEditable}"
                                        VerticalOptions="Center"
                                            FontSize="30"
                                            HeightRequest="40"
                                        WidthRequest="40"
                                TextColor="{AppThemeBinding Dark=White, Light= Black,Default=Black}"
                        Text="{x:Static MaterialFont:FontIcon.Pencil}"
                        CornerRadius="30"
                        FontFamily="MF"
                        HorizontalOptions="End" >
                                <sfBtn:SfButton.Triggers>
                                    <Trigger TargetType="sfBtn:SfButton" Property="IsChecked" Value="True">
                                        <Setter Property="Text" Value="{x:Static MaterialFont:FontIcon.Check}"/>
                                        <Setter Property="TextColor" Value="{StaticResource AppColor}"/>
                                    </Trigger>

                                </sfBtn:SfButton.Triggers>
                            </sfBtn:SfButton>
                        </Grid>
                        <ScrollView Grid.Row="1" >
                            <StackLayout>
                                <ff:CachedImage Source="Ellipse.png" WidthRequest="100" HeightRequest="100" >
                                    <ff:CachedImage.Transformations >
                                        <ffTrans:CircleTransformation />
                                        <!--<ffTrans:BlurredTransformation Radius="1"/>-->
                                    </ff:CachedImage.Transformations>
                                </ff:CachedImage>
                                <Label Text="{Binding LoginResponse.user.name,Converter={StaticResource TextToSentenceConverter}}" HorizontalOptions="Center" FontFamily="NSK" FontSize="20" HorizontalTextAlignment="Center" Margin="0,15,0,0"/>
                                <controls:EditAdaptEntry Header="Name"
                                                         x:Name="NameEntry"
                                                         HorizontalOptions="FillAndExpand"
                                                         IsEditable="{Binding IsChecked,Source={x:Reference EditToggleBtn}}"
                                                         Value="{Binding LoginResponse.user.name, Mode=TwoWay}" Icon="{x:Static MaterialFont:FontIcon.Account}" ControlTemplate="{StaticResource EditAdaptEntry}"/>
                                <controls:EditAdaptEntry Header="Email" 
                                                         x:Name="EmailEntry"
                                                         IsEditable="False"
                                                         HorizontalOptions="FillAndExpand"
                                                         Value="{Binding LoginResponse.user.email, Mode=TwoWay}" Icon="{x:Static MaterialFont:FontIcon.Email}" ControlTemplate="{StaticResource EditAdaptEntry}"/>
                                <controls:EditAdaptEntry Header="Password" 
                                                         x:Name="PasswordEntry"
                                                         HorizontalOptions="FillAndExpand"
                                                         IsEditable="False"
                                                         IsPassword="True"
                                                         Value="user.your@gmail.com" Icon="{x:Static MaterialFont:FontIcon.Key}" ControlTemplate="{StaticResource EditAdaptEntry}"/>
                                <StackLayout Margin="20,0" WidthRequest="400" Spacing="0" HorizontalOptions="FillAndExpand" >
                                    <Label Text="Level" Style="{StaticResource EntryHeader}" IsVisible="{Binding IsChecked,Source={x:Reference EditToggleBtn}}" />
                                    <inputLayout:SfTextInputLayout LeadingViewPosition="Inside">
                                        <inputLayout:SfTextInputLayout.Triggers>
                                            <DataTrigger TargetType="inputLayout:SfTextInputLayout" Binding="{Binding IsChecked,Source={x:Reference EditToggleBtn}}" Value="False">
                                                <Setter Property="LeadingViewPosition" Value="Inside"/>
                                                <Setter Property="LeadingView">
                                                    <Setter.Value>
                                                        <Grid WidthRequest="100" RowSpacing="0" ColumnDefinitions="Auto,Auto">
                                                            <Label Grid.Column="0" Text="{x:Static MaterialFont:FontIcon.Numeric}" FontFamily="MF" FontSize="25" Margin="5,0,0,0" TextColor="{AppThemeBinding Dark=White, Light= Black,Default=Black}"/>
                                                            <Label Grid.Column="1" Text="Level" LineBreakMode="TailTruncation" MaxLines="1"
                                               VerticalOptions="Center" FontFamily="NSK" TextColor="{AppThemeBinding Dark=White, Light= Black,Default=Black}" />
                                                        </Grid>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </inputLayout:SfTextInputLayout.Triggers>

                                        <CustomView:CustomPickerView x:Name="LevelPicker" 
                                                                     IsEnabled="{Binding IsChecked,Source={x:Reference EditToggleBtn}}"
                                                         SelectedItem="{Binding LoginResponse.user.year, Mode=TwoWay}"
                                                         Title="Select Level"
                                                             FontFamily="ISB"
                                                                     HorizontalTextAlignment="End"
                                                             Placeholder=""
                                                                     Opacity="1"
                                                         FontSize="15"
                                                                     BackColor="Red"
                                                                     BackgroundColor="Transparent"
                                                         Margin="0,0,0,0"
                                                         VerticalOptions="End"
                                                         PlaceholderColor="{AppThemeBinding Dark=LightGray, Light= #9CA0B0,Default=#9CA0B0}"
                                                         TextColor="{AppThemeBinding Dark=lightgray, Light= #9CA0B0,Default=#9CA0B0}}"
                                                         TitleColor="{AppThemeBinding Dark=White, Light= {StaticResource BackgroundColorDark},Default={StaticResource BackgroundColorDark}}"
                                                         SelectedIndex="2">
                                            <CustomView:CustomPickerView.Triggers>
                                                <DataTrigger TargetType="CustomView:CustomPickerView" Binding="{Binding IsChecked,Source={x:Reference EditToggleBtn}}" Value="True">
                                                    <Setter Property="HorizontalTextAlignment" Value="Start"/>
                                                </DataTrigger>
                                            </CustomView:CustomPickerView.Triggers>
                                            <CustomView:CustomPickerView.ItemsSource>
                                                <x:Array Type="{x:Type x:Int32}">
                                                    <x:Int32>100</x:Int32>
                                                    <x:Int32>200</x:Int32>
                                                    <x:Int32>300</x:Int32>
                                                    <x:Int32>400</x:Int32>
                                                    <x:Int32>500</x:Int32>
                                                    <x:Int32>600</x:Int32>
                                                </x:Array>
                                            </CustomView:CustomPickerView.ItemsSource>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal">

                                                    </VisualState>

                                                    <VisualState x:Name="Focused">

                                                    </VisualState>

                                                    <VisualState x:Name="Disabled">
                                                        <VisualState.Setters>
                                                            <Setter Property="Opacity" Value="1"/>
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                        </CustomView:CustomPickerView>
                                    </inputLayout:SfTextInputLayout>
                                </StackLayout>
                                
                                <StackLayout Margin="20,0" WidthRequest="400" Spacing="0" HorizontalOptions="FillAndExpand" >
                                    <Label Text="Course" Style="{StaticResource EntryHeader}" IsVisible="{Binding IsEditable,Source={x:Reference EmailEntry}}" />
                                    <inputLayout:SfTextInputLayout LeadingViewPosition="Inside">
                                        <inputLayout:SfTextInputLayout.Triggers>
                                            <DataTrigger TargetType="inputLayout:SfTextInputLayout" Binding="{Binding IsEditable,Source={x:Reference EmailEntry}}" Value="False">
                                                <Setter Property="LeadingViewPosition" Value="Inside"/>
                                                <Setter Property="LeadingView">
                                                    <Setter.Value>
                                                        <Grid WidthRequest="100" RowSpacing="0" ColumnDefinitions="Auto,Auto">
                                                            <Label Grid.Column="0" Text="{x:Static MaterialFont:FontIcon.School}" FontFamily="MF" FontSize="25" Margin="5,0,0,0" TextColor="{AppThemeBinding Dark=White, Light= Black,Default=Black}"/>
                                                            <Label Grid.Column="1" Text="Course" LineBreakMode="TailTruncation" MaxLines="1"
                                               VerticalOptions="Center" FontFamily="NSK" TextColor="{AppThemeBinding Dark=White, Light= Black,Default=Black}" />
                                                        </Grid>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </inputLayout:SfTextInputLayout.Triggers>

                                        <Grid>
                                            <Frame Padding="0,15"
                                                   IsEnabled="{Binding IsEditable,Source={x:Reference EmailEntry}}"
                                HorizontalOptions="FillAndExpand"
                                BackgroundColor="{OnPlatform Android=Transparent,iOS=White, UWP=#E5E5E5}"
                                xct:TouchEffect.Command="{Binding CustomButtonClicked}"
                                xct:TouchEffect.NativeAnimation="True"
                                xct:TouchEffect.NativeAnimationColor="LightGray"
                                CornerRadius="{OnPlatform Android=0, UWP=2}">



                                                <Label Text="{Binding ProfileEditVM.SelectedDept.Department , FallbackValue='', TargetNullValue=''}" 
                                       VerticalOptions="Center"
                                       HorizontalOptions="End"
                                                x:Name="DepartmentLabel"
                                       LineBreakMode="TailTruncation"
                                               FontFamily="ISB"
                                               Margin="0,0,0,0"
                                       MaxLines="1"
                                       TextColor="{AppThemeBinding Dark=lightgray, Light=#9CA0B0,Default=#9CA0B0}">
                                                    <Label.Triggers>

                                                        <Trigger TargetType="Label" Property="Text" Value="Tap to select">
                                                            <Setter Property="TextColor" Value="{AppThemeBinding Dark=LightGray, Light= #9CA0B0,Default=#9CA0B0}"/>
                                                        </Trigger>
                                                        <DataTrigger TargetType="Label" Binding="{Binding IsEditable,Source={x:Reference EmailEntry}}" Value="True">
                                                            <Setter Property="HorizontalOptions" Value="Start"/>
                                                        </DataTrigger>

                                                    </Label.Triggers>
                                                </Label>

                                            </Frame>
                                            <!--<Path Style="{StaticResource DownArrow}"
                                  IsVisible="{x:OnPlatform False, UWP=True}"
                                    VerticalOptions="Center"
                                  Data="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z"/>-->

                                        </Grid>
                                    </inputLayout:SfTextInputLayout>
                                </StackLayout>
                                <sfBtn:SfButton Text="Log Out" IsCheckable="False" 
                                                PressedBackgroundColor="{AppThemeBinding Dark={StaticResource DimGray}, Light=#F5F5F9,Default=#F5F5F9}"
                                                BackgroundColor="{AppThemeBinding Dark={StaticResource DimGray}, Light=#F5F5F9,Default=#F5F5F9}"
                                                Command="{Binding LogOutCommand}"
                                        ShowIcon="True"
                                        FontFamily="IR"
                                        FontSize="15"
                                        Margin="20,0,0,0"
                                                Padding="5,15,15,15"
                                        HorizontalOptions="Start" CornerRadius="5" ImageAlignment="Left"
                                        TextColor="PaleVioletRed">
                                    <sfBtn:SfButton.ImageSource>
                                        <FontImageSource Glyph="{x:Static MaterialFont:FontIcon.Logout}" Color="PaleVioletRed" FontFamily="MF" Size="10"/>
                                    </sfBtn:SfButton.ImageSource>
                                    
                                </sfBtn:SfButton>
                            </StackLayout>
                        </ScrollView>
                    </Grid>
                    
                </xct:TabViewItem>
            </xct:TabView>
        </Grid>
    </ContentPage.Content>
</ContentPage>